{"ast":null,"code":"var _jsxFileName = \"/Users/aaronkogan/react-practical-assignment/client/src/components/NewPost.js\",\n  _s = $RefreshSig$();\nimport \"./NewPost.css\";\nimport React, { useState } from \"react\";\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { newPost, selectPosts } from \"../reducers/posts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddPost = () => {\n  _s();\n  const url = 'http://localhost:8080/post/';\n  const dispatch = useDispatch();\n  const postComment = async (url, query, cb) => {\n    console.warn('fetching ' + url);\n    const res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: query\n    });\n    fetchPosts('http://localhost:8080/post/');\n  };\n  const fetchPosts = async query => {\n    console.warn('fetching ' + query);\n    const res = await fetch(query, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'Authorization'\n      }\n    });\n    const json = await res.json();\n    dispatch(newPost(json));\n    console.log('##5555' + query);\n  };\n  const handleNewPost = e => {\n    e.preventDefault();\n    postComment(url, JSON.stringify({\n      title: 'ss',\n      username: 'ssd',\n      imageSrc: 'ssss'\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"NewPost\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => handleNewPost(e),\n      children: \"Add post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(AddPost, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n_c = AddPost;\nexport default AddPost;\nvar _c;\n$RefreshReg$(_c, \"AddPost\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","newPost","selectPosts","jsxDEV","_jsxDEV","AddPost","_s","url","dispatch","postComment","query","cb","console","warn","res","fetch","method","headers","body","fetchPosts","json","log","handleNewPost","e","preventDefault","JSON","stringify","title","username","imageSrc","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aaronkogan/react-practical-assignment/client/src/components/NewPost.js"],"sourcesContent":["import \"./NewPost.css\";\nimport React, { useState } from \"react\";\nimport {useEffect} from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { newPost, selectPosts } from \"../reducers/posts\";\n\nconst AddPost = () => {\n    const url = ('http://localhost:8080/post/')\n    const dispatch = useDispatch();\n    const postComment = async (url, query, cb) => {\n      console.warn('fetching ' + url);\n      const res = await fetch(url, {method: 'POST', headers: {'Content-Type':'application/json'}, body: query});\n      fetchPosts('http://localhost:8080/post/');\n    };\n    const fetchPosts = async (query) => {\n      console.warn('fetching ' + query);\n      const res = await fetch(query, {method: 'GET', headers: {'Content-Type':'Authorization'}});\n      const json = await res.json();\n      dispatch(newPost(json));\n      console.log('##5555'+query);\n      };\n    const handleNewPost = (e) => {\n        e.preventDefault();\n        postComment(url,JSON.stringify({title:'ss', username:'ssd', imageSrc:'ssss'}));\n      };\n    return (\n        <div className=\"NewPost\">\n            <button onClick={(e) => handleNewPost(e)}>Add post</button>\n        </div>\n      );\n};\n\nexport default AddPost;"],"mappings":";;AAAA,OAAO,eAAe;AACtB,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAAQC,SAAS,QAAO,OAAO;AAC/B,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,OAAO,EAAEC,WAAW,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAMC,GAAG,GAAI,6BAA8B;EAC3C,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,WAAW,GAAG,MAAAA,CAAOF,GAAG,EAAEG,KAAK,EAAEC,EAAE,KAAK;IAC5CC,OAAO,CAACC,IAAI,CAAC,WAAW,GAAGN,GAAG,CAAC;IAC/B,MAAMO,GAAG,GAAG,MAAMC,KAAK,CAACR,GAAG,EAAE;MAACS,MAAM,EAAE,MAAM;MAAEC,OAAO,EAAE;QAAC,cAAc,EAAC;MAAkB,CAAC;MAAEC,IAAI,EAAER;IAAK,CAAC,CAAC;IACzGS,UAAU,CAAC,6BAA6B,CAAC;EAC3C,CAAC;EACD,MAAMA,UAAU,GAAG,MAAOT,KAAK,IAAK;IAClCE,OAAO,CAACC,IAAI,CAAC,WAAW,GAAGH,KAAK,CAAC;IACjC,MAAMI,GAAG,GAAG,MAAMC,KAAK,CAACL,KAAK,EAAE;MAACM,MAAM,EAAE,KAAK;MAAEC,OAAO,EAAE;QAAC,cAAc,EAAC;MAAe;IAAC,CAAC,CAAC;IAC1F,MAAMG,IAAI,GAAG,MAAMN,GAAG,CAACM,IAAI,CAAC,CAAC;IAC7BZ,QAAQ,CAACP,OAAO,CAACmB,IAAI,CAAC,CAAC;IACvBR,OAAO,CAACS,GAAG,CAAC,QAAQ,GAACX,KAAK,CAAC;EAC3B,CAAC;EACH,MAAMY,aAAa,GAAIC,CAAC,IAAK;IACzBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBf,WAAW,CAACF,GAAG,EAACkB,IAAI,CAACC,SAAS,CAAC;MAACC,KAAK,EAAC,IAAI;MAAEC,QAAQ,EAAC,KAAK;MAAEC,QAAQ,EAAC;IAAM,CAAC,CAAC,CAAC;EAChF,CAAC;EACH,oBACIzB,OAAA;IAAK0B,SAAS,EAAC,SAAS;IAAAC,QAAA,eACpB3B,OAAA;MAAQ4B,OAAO,EAAGT,CAAC,IAAKD,aAAa,CAACC,CAAC,CAAE;MAAAQ,QAAA,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC;AAEd,CAAC;AAAC9B,EAAA,CAxBID,OAAO;EAAA,QAEQN,WAAW;AAAA;AAAAsC,EAAA,GAF1BhC,OAAO;AA0Bb,eAAeA,OAAO;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}