{"ast":null,"code":"var _jsxFileName = \"/Users/aaronkogan/react-practical-assignment/client/src/components/Posts.js\",\n  _s = $RefreshSig$();\nimport \"./Posts.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPost, editPost, deletePost, selectPosts } from \"../reducers/posts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  const posts = useSelector(selectPosts);\n  let parsed = JSON.parse(JSON.stringify(posts));\n  let result = {};\n  let parseResult = [];\n  let postsCount = 0;\n  if (parsed) {\n    result = parsed[\"result\"];\n    for (var i = 0; i < result.length; i++) {\n      parseResult[result[i].id] = [result[i].id, result[i].title, result[i].username, result[i].imageSrc, result[i].likes, result[i].dislikes, result[i].date, result[i].comments];\n      postsCount++;\n    }\n  }\n  parseResult.shift();\n  console.log(JSON.stringify(parseResult));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts\",\n    children: [/*#__PURE__*/_jsxDEV(\"article\", {\n      role: \"main\",\n      children: parseResult.map((post, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [post, \" | \", i + 1, \" | \"]\n      }, i + 1, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: postsCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 13\n  }, this);\n};\n_s(Posts, \"6hBbuofx6pBPNuvOg59liqMeVP8=\", false, function () {\n  return [useSelector];\n});\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["useDispatch","useSelector","getPost","editPost","deletePost","selectPosts","jsxDEV","_jsxDEV","Posts","_s","posts","parsed","JSON","parse","stringify","result","parseResult","postsCount","i","length","id","title","username","imageSrc","likes","dislikes","date","comments","shift","console","log","className","children","role","map","post","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aaronkogan/react-practical-assignment/client/src/components/Posts.js"],"sourcesContent":["import \"./Posts.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPost,editPost,deletePost,selectPosts } from \"../reducers/posts\";\n\n\nconst Posts = () => {\n    const posts = useSelector(selectPosts);\n    let parsed = JSON.parse(JSON.stringify(posts));\n    let result = {};\n    let parseResult = [];\n    let postsCount = 0;\n    if(parsed) {\n        result = (parsed[\"result\"]) \n        for(var i = 0; i < result.length; i++) {\n            parseResult[result[i].id] = [result[i].id, result[i].title, result[i].username, result[i].imageSrc, result[i].likes, result[i].dislikes, result[i].date, result[i].comments];\n            postsCount++;\n        }}    \n        parseResult.shift();\n    console.log(JSON.stringify(parseResult));\n        return (\n            <div className=\"posts\">\n                <article role=\"main\">\n                    {parseResult.map((post, i) => (\n                            <div key={i+1}>{post} | {i+1} | </div>\n                        ))}\n                </article>\n{/* <table>\n        <thead>\n          <tr>\n            <th>id</th>\n            <th>title</th>\n            <th>username</th>\n            <th>imageSrc</th>\n            <th>likes</th>\n            <th>dislikes</th>\n            <th>date</th>\n            <th>comments</th>\n          </tr>\n        </thead>\n        <tbody>\n          {parseResult.map(post => {\n            return (\n              <tr>\n                <td key={i}>{post[0]}</td>\n                <td key={i}>{post[1]}</td>\n                <td key={i}>{post[2]}</td>\n                <td key={i}>{post[3]}</td>\n                <td key={i}>{post[4]}</td>\n                <td key={i}>{post[5]}</td>\n                <td key={i}> {post[6]}</td>\n                <td key={i}>{post[7]}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table> */}\n                <p>\n                {postsCount}\n                </p>\n          </div>\n        );\n};\n\nexport default Posts;"],"mappings":";;AAAA,OAAO,aAAa;AACpB,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,OAAO,EAACC,QAAQ,EAACC,UAAU,EAACC,WAAW,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5E,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,KAAK,GAAGT,WAAW,CAACI,WAAW,CAAC;EACtC,IAAIM,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACJ,KAAK,CAAC,CAAC;EAC9C,IAAIK,MAAM,GAAG,CAAC,CAAC;EACf,IAAIC,WAAW,GAAG,EAAE;EACpB,IAAIC,UAAU,GAAG,CAAC;EAClB,IAAGN,MAAM,EAAE;IACPI,MAAM,GAAIJ,MAAM,CAAC,QAAQ,CAAE;IAC3B,KAAI,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,MAAM,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;MACnCF,WAAW,CAACD,MAAM,CAACG,CAAC,CAAC,CAACE,EAAE,CAAC,GAAG,CAACL,MAAM,CAACG,CAAC,CAAC,CAACE,EAAE,EAAEL,MAAM,CAACG,CAAC,CAAC,CAACG,KAAK,EAAEN,MAAM,CAACG,CAAC,CAAC,CAACI,QAAQ,EAAEP,MAAM,CAACG,CAAC,CAAC,CAACK,QAAQ,EAAER,MAAM,CAACG,CAAC,CAAC,CAACM,KAAK,EAAET,MAAM,CAACG,CAAC,CAAC,CAACO,QAAQ,EAAEV,MAAM,CAACG,CAAC,CAAC,CAACQ,IAAI,EAAEX,MAAM,CAACG,CAAC,CAAC,CAACS,QAAQ,CAAC;MAC5KV,UAAU,EAAE;IAChB;EAAC;EACDD,WAAW,CAACY,KAAK,CAAC,CAAC;EACvBC,OAAO,CAACC,GAAG,CAAClB,IAAI,CAACE,SAAS,CAACE,WAAW,CAAC,CAAC;EACpC,oBACIT,OAAA;IAAKwB,SAAS,EAAC,OAAO;IAAAC,QAAA,gBAClBzB,OAAA;MAAS0B,IAAI,EAAC,MAAM;MAAAD,QAAA,EACfhB,WAAW,CAACkB,GAAG,CAAC,CAACC,IAAI,EAAEjB,CAAC,kBACjBX,OAAA;QAAAyB,QAAA,GAAgBG,IAAI,EAAC,KAAG,EAACjB,CAAC,GAAC,CAAC,EAAC,KAAG;MAAA,GAAtBA,CAAC,GAAC,CAAC;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAwB,CACxC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eA+BVhC,OAAA;MAAAyB,QAAA,EACCf;IAAU;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEhB,CAAC;AAAC9B,EAAA,CAxDID,KAAK;EAAA,QACOP,WAAW;AAAA;AAAAuC,EAAA,GADvBhC,KAAK;AA0DX,eAAeA,KAAK;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}